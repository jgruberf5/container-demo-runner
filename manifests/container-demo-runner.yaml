apiVersion: v1
kind: ConfigMap
metadata:
  name: container-demo-runner-config
data:
  allowed_commands: |
    ["^ping", "^cat /etc/hosts", "^ip route$", "^ip addr$", "^ip link$", "^ip neigh", "^netstat", "^dig", "^traceroute", "^curl", "^whois", "^kubectl", "^iperf"]
  http_listen_address: "0.0.0.0"
  http_listen_port: "8080"
  ws_listen_address: "0.0.0.0"
  ws_listen_port: "5678"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-demo-config-app
spec:
  selector:
    matchLabels:
      app: container-demo-config-app
  replicas: 1
  template:
    metadata:
      labels:
        app: container-demo-config-app
    spec:
      volumes:
      - name: container-demo-config-volume
        configMap:
          name: container-demo-runner-config
      containers:
      - name: container-demo-runner
        image: jgruberf5/container-demo-runner:latest
        ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 5678
            protocol: TCP
          - containerPort: 5001
            protocol: TCP
        volumeMounts:
          - name: container-demo-config-volume
            mountPath: /etc/container-demo-runner
      env:
      - name: HTTP_CLIENT_PORT
        value: 31080
      - name: WS_CLIENT_PORT
        value: 31678
      - name: IPERF_CLIENT_PORT
        value: 31001
---
apiVersion: v1
kind: Service
metadata:
  name: container-demo-config-web-frontend
spec:
  type: NodePort
  selector:
    app: container-demo-config-app
  ports:
  - name: http
    port: 8080
    nodePort: 31080
---
apiVersion: v1
kind: Service
metadata:
  name: container-demo-config-websocket-command
spec:
  type: NodePort
  selector:
    app: container-demo-config-app
  ports:
  - name: http
    port: 5678
    nodePort: 31678
---
apiVersion: v1
kind: Service
metadata:
  name: container-demo-config-web-iperf
spec:
  type: NodePort
  selector:
    app: container-demo-config-app
  ports:
  - name: http
    port: 5001
    nodePort: 31001
