apiVersion: v1
kind: ServiceAccount
metadata:
  name: diag-container
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-role-binding-clusterrolebinding-simple
subjects:
  - kind: ServiceAccount
    name: diag-container
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-role-binding-diag-container
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-role-binding-diag-container
rules: 
- apiGroups: [""] 
  resources: ["pods","services","namespaces","deployments","jobs","statefulsets","persistentvolumeclaims"] 
  verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: diag-container-config
  namespace: default
data:
  allowed_commands: |
    ["^ping", "^cat /etc/hosts", "^cat /etc/resolv.conf", "^env$", "^ip route$", "^ip addr$", "^ip link$", "^ip neigh", "^netstat", "^dig", "^nc", "^ab", "^siege", "^tcping", "^traceroute", "^tcptraceroute", "^curl", "^whois", "^kubectl", "^iperf"]
  http_listen_address: "0.0.0.0"
  http_listen_port: "8080"
  ws_listen_address: "0.0.0.0"
  ws_listen_port: "8080"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diag-container-app
  namespace: default
spec:
  selector:
    matchLabels:
      app: diag-container-app
  replicas: 1
  template:
    metadata:
      labels:
        app: diag-container-app
    spec:
      serviceAccountName: diag-container
      volumes:
      - name: diag-container-volume
        configMap:
          name: diag-container-config
      containers:
      - name: diag-container
        image: jgruberf5/container-demo-runner:latest
        # if you want to be able to inject /etc/hosts entries
        #securityContext:
        #  allowPrivilegeEscalation: false
        #  runAsUser: 0
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        - containerPort: 5001
          protocol: TCP
        volumeMounts:
        - name: diag-container-volume
          mountPath: /etc/container-demo-runner
        env:
        - name: HTTP_CLIENT_PORT
          value: "31080"
        - name: WS_CLIENT_PORT
          value: "31080"
        - name: IPERF_CLIENT_PORT
          value: "31001"
---
apiVersion: v1
kind: Service
metadata:
  name: diag-container-web-in-cluster
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: diag-container-app
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: diag-container-web
  namespace: default
spec:
  type: NodePort
  selector:
    app: diag-container-app
  ports:
  - name: http
    port: 8080
    nodePort: 30080
---
apiVersion: v1
kind: Service
metadata:
  name: diag-container-iperf-in-cluster
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: diag-container-app
  ports:
  - name: http
    port: 5001
    targetPort: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: diag-container-iperf
  namespace: default
spec:
  type: NodePort
  selector:
    app: diag-container-app
  ports:
  - name: http
    port: 5001
    nodePort: 31001
